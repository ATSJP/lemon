server:
    port: ${server.port}
    tomcat:
        max-threads: ${tomcat-max-threads}
        min-spare-threads: ${tomcat-min-spare-threads}

spring:
    servlet:
        multipart:
            max-file-size: ${max-file-size}
            max-request-size: ${max-request-size}

    # 允许重复名称的bean定义，为了解决Fegin重复命名无法启动的问题
    main:
        allow-bean-definition-overriding: true

    datasource:
        type: ${jdbc.type}
        driver-class-name: ${jdbc.driver-class-name}
        url: ${jdbc.url}
        username: ${jdbc.username}
        password: ${jdbc.password}
        druid:
            # 初始化连接池的连接数量 大小，最小，最大
            initial-size: ${jdbc-initial-size}
            max-active: ${jdbc-max-active}
            min-idle: ${jdbc-min-idle}
            # 配置获取连接等待超时的时间
            max-wait: ${jdbc-max-wait}
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: ${jdbc-time-between-eviction-runs-millis}
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            # min-evictable-idle-time-millis:
            # max-evictable-idle-time-millis:
            validation-query: ${jdbc-validation-query}
            # validation-query-timeout:
            test-on-borrow: ${jdbc-test-on-borrow}
            test-on-return: ${jdbc-test-on-return}
            test-while-idle: ${jdbc-test-while-idle}
            # 是否缓存preparedStatement，也就是PSCache
            pool-prepared-statements: ${jdbc-pool-prepared-statements}
            # 配置监控统计拦截的filters
            filter:
                stat:
                    enabled: ${jdbc-filter-stat-enabled}
                    merge-sql: ${jdbc-filter-stat-merge-sql}
                    logSlowSql: ${jdbc-filter-stat-logSlowSql}
                    slow-sql-millis: ${jdbc-filter-stat-slow-sql-millis}

    jpa:
        generateDdl: ${hibernate.generateDdl}
        properties:
            hibernate:
                show_sql: ${hibernate.show_sql}
                format_sql: ${hibernate.format_sql}
                database-platform: ${hibernate.database-platform}

    jackson:
        time-zone: ${jackson.time-zone}
        date-format: ${jackson.date-format}

eureka:
    instance:
        hostname: ${spring.application.name}
        # 设置微服务调用地址为IP优先（缺省为false）
        prefer-ip-address: ${use-ip-address}
    # 注册地址
    client:
        # 是否将此实例注册到注册中心
        register-with-eureka: ${register-with-eureka}
        service-url:
            defaultZone: ${register.url}

# actuator 监控
management:
    endpoints:
        web:
            basePath: ${actuator.web.url}
            # 监控请求
            exposure:
                include: ${actuator.web.exposure.include}
    server:
        port: ${actuator.server.port}
    endpoint:
        health:
            show-details: ${actuator.health.show-details}
    # micrometer监控
    metrics:
        tags:
            application: ${spring.application.name}
            env: ${spring.cloud.config.profile}

logging:
    #日志
    config: classpath:logback-${spring.cloud.config.profile}.xml

# redission配置文件
redission:
    config: ${redission.single.config}

# 搜索索引位置
video_index_path: ${video_index_path}
# 视频上传路径
video_source_path: ${video_source_path}
# 图片上传路径
image_source_path: ${image_source_path}
